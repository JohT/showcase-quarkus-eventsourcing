[
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.domain.model.account.AccountAggregate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.message.command.CommandTargetAggregateIdentifier",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.message.command.account.ChangeNicknameCommand",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.command.boundary.CommandModelAggregate",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.command.boundary.CommandModelAggregateIdentifier",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.command.boundary.CommandModelCommandHandler",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.command.boundary.CommandModelEventSourcingHandler",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.infrastructure.axon.serializer.jsonb.axon.JsonbSerializer",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.infrastructure.axon.transaction.jta.JtaTransactionManager",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.infrastructure.axon.upcaster.AnnotationEventRevisionResolver",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.infrastructure.axon.upcaster.NicknameChangedEventV1Upcaster",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.query.boundary.EventTimestampParameter",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.query.boundary.QueryModelEventHandler",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.query.boundary.QueryModelProjection",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.query.boundary.QueryModelQueryHandler",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.messaging.query.boundary.QueryModelResetHandler",
  "allDeclaredMethods":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.query.model.account.AccountProjection",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.query.model.account.AccountProjection_Subclass",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.query.model.account.AccountQueryHandler",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.query.model.account.AccountQueryHandler_ClientProxy",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.query.model.nickname.NicknameProjection",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.query.model.nickname.NicknameProjection_Subclass",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.query.model.nickname.NicknameQueryHandler",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.github.joht.showcase.quarkuseventsourcing.query.model.nickname.NicknameQueryHandler_ClientProxy",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.quarkus.arc.ClientProxy",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.quarkus.arc.Subclass",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.quarkus.jsonb.QuarkusJsonbComponentInstanceCreator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.CidrAddressConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.DurationConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.InetAddressConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.InetSocketAddressConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.LocaleConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.MemorySizeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.PathConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.QuarkusConfigFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.configuration.RegexConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.quarkus.runtime.logging.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.vertx.core.buffer.impl.BufferFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.vertx.core.impl.FutureFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.io.Serializable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Boolean",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Comparable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Enum",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Iterable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.lang.String",
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredMethods":true
},
{
  "name":"java.util.AbstractList",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Collection",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Collections$SingletonList",
  "allDeclaredMethods":true
},
{
  "name":"java.util.List",
  "allDeclaredMethods":true
},
{
  "name":"java.util.RandomAccess",
  "allDeclaredMethods":true
},
{
  "name":"java.util.function.BiFunction",
  "allDeclaredMethods":true
},
{
  "name":"java.util.function.Function",
  "allDeclaredMethods":true
},
{
  "name":"jdk.vm.ci.hotspot.amd64.AMD64HotSpotJVMCIBackendFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.commandhandling.CommandBus",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.commandhandling.CommandHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.commandhandling.CommandMessageHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.commandhandling.CurrentUnitOfWorkParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.commandhandling.DuplicateCommandHandlerResolver",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.commandhandling.InterceptorChainParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.commandhandling.LoggingDuplicateCommandHandlerResolver",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.commandhandling.MethodCommandHandlerDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.commandhandling.SimpleCommandBus",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.commandhandling.gateway.AbstractCommandGateway",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.commandhandling.gateway.CommandGateway",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.commandhandling.gateway.DefaultCommandGateway",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.common.Priority",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.common.transaction.TransactionManager",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.config.DefaultConfigurer$$Lambda$426/1294577855",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.config.MessageHandlerRegistrar",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.config.MessageMonitorFactoryBuilder$$Lambda$417/1028528442",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.config.ProcessingGroup",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.deadline.annotation.DeadlineMethodMessageHandlerDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.eventhandling.AbstractEventBus",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.AbstractEventProcessor",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.ConcludesBatchParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.eventhandling.DomainEventSequenceAware",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.ErrorHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.EventBus",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.EventHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.EventProcessor",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.GapAwareTrackingToken"
},
{
  "name":"org.axonframework.eventhandling.ListenerInvocationErrorHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.LoggingErrorHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.PropagatingErrorHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.SequenceNumberParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.eventhandling.SubscribingEventProcessor",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.Timestamp",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.TimestampParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.eventhandling.TrackingEventProcessor",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.TrackingEventProcessorConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.TrackingTokenParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.eventhandling.async.SequencingPolicy",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.async.SequentialPerAggregatePolicy",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.replay.ReplayAwareMessageHandlerWrapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.eventhandling.replay.ReplayParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.eventhandling.tokenstore.TokenStore",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventhandling.tokenstore.jdbc.JdbcTokenStore",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.AbstractAggregateFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.AggregateFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.EventCountSnapshotTriggerDefinition",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.EventSourcingHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.EventSourcingRepository",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.GenericAggregateFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.SnapshotTriggerDefinition",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.conflictresolution.ConflictResolution",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.eventsourcing.eventstore.AbstractEventStore",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.eventstore.EmbeddedEventStore",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.eventsourcing.eventstore.EventStore",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.lifecycle.ShutdownHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.lifecycle.StartHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.MessageDispatchInterceptorSupport",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.MessageHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.MessageHandlerInterceptorSupport",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.ScopeAware",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.StreamableMessageSource",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.SubscribableMessageSource",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.annotation.AnnotatedMessageHandlingMemberDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.messaging.annotation.DefaultParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.messaging.annotation.MessageHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.annotation.MessageIdentifierParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.messaging.annotation.MultiParameterResolverFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.annotation.ParameterResolverFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.annotation.SourceIdParameterResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.messaging.unitofwork.RollbackConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.unitofwork.RollbackConfigurationType",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.messaging.unitofwork.RollbackConfigurationType$2",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.AbstractRepository",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.AggregateIdentifier",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.AggregateRoot",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.AnnotationCommandTargetResolver",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.CommandTargetResolver",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.EntityId",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.LockingRepository",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.Repository",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.inspection.AggregateMemberAnnotatedChildEntityCollectionDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.modelling.command.inspection.AggregateMemberAnnotatedChildEntityDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.modelling.command.inspection.AggregateMemberAnnotatedChildEntityMapDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.modelling.command.inspection.AggregateMetaModelFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.inspection.AggregateModel",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.inspection.AnnotatedAggregateMetaModelFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.inspection.AnnotatedAggregateMetaModelFactory$AnnotatedAggregateModel",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.inspection.EntityModel",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.modelling.command.inspection.MethodCommandHandlerInterceptorDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.modelling.command.inspection.MethodCreationPolicyDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.modelling.saga.SagaMethodMessageHandlerDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.queryhandling.DefaultQueryGateway",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.LoggingQueryInvocationErrorHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.QueryBus",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.QueryGateway",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.QueryHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.QueryInvocationErrorHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.QueryUpdateEmitter",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.SimpleQueryBus",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.SimpleQueryUpdateEmitter",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.queryhandling.annotation.MethodQueryMessageHandlerDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.serialization.RevisionResolver",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.serialization.Serializer",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.serialization.converters.BlobToInputStreamConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.serialization.converters.ByteArrayToInputStreamConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.serialization.converters.ByteArrayToStringConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.serialization.converters.InputStreamToByteArrayConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.serialization.converters.StringToByteArrayConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.axonframework.serialization.upcasting.GenericUpcasterChain",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.serialization.upcasting.SingleEntryUpcaster",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.serialization.upcasting.Upcaster",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.serialization.upcasting.event.EventUpcaster",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.serialization.upcasting.event.EventUpcasterChain",
  "allDeclaredMethods":true
},
{
  "name":"org.axonframework.serialization.upcasting.event.SingleEventUpcaster",
  "allDeclaredMethods":true
},
{
  "name":"org.eclipse.yasson.JsonBindingProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.graalvm.compiler.hotspot.HotSpotGraalJVMCIServiceLocator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jboss.resteasy.microprofile.config.FilterConfigSource",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jboss.resteasy.microprofile.config.ServletConfigSource",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jboss.resteasy.microprofile.config.ServletContextConfigSource",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.postgresql.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
