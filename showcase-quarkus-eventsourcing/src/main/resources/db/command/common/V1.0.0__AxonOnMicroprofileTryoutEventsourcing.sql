CREATE SCHEMA IF NOT EXISTS "axon_on_microprofile_tryout";

CREATE TABLE "axon_on_microprofile_tryout"."domainevententry" (
	GLOBALINDEX BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, 
	AGGREGATEIDENTIFIER VARCHAR(255) NOT NULL,
	EVENTIDENTIFIER VARCHAR(255) NOT NULL, 
	--METADATA BLOB, -> needs to be added afterwards inside the database specific setups
	--PAYLOAD BLOB NOT NULL, -> needs to be added afterwards inside the database specific setups
	PAYLOADREVISION VARCHAR(255), 
	PAYLOADTYPE VARCHAR(255) NOT NULL, 
	SEQUENCENUMBER BIGINT NOT NULL, 
	TIMESTAMP VARCHAR(255) NOT NULL,  
	TYPE VARCHAR(255) NOT NULL, 
	PRIMARY KEY (GLOBALINDEX)
);
CREATE UNIQUE INDEX DOMAINEVENTENTRY_UNIQUE_INDEX_AGGREGATE ON "axon_on_microprofile_tryout"."domainevententry" (AGGREGATEIDENTIFIER, SEQUENCENUMBER);
CREATE UNIQUE INDEX DOMAINEVENTENTRY_UNIQUE_INDEX_EVENT ON "axon_on_microprofile_tryout"."domainevententry" (EVENTIDENTIFIER);

CREATE TABLE "axon_on_microprofile_tryout"."snapshotevententry" (
	SEQUENCENUMBER BIGINT NOT NULL, 
	AGGREGATEIDENTIFIER VARCHAR(255) NOT NULL, 
	TYPE VARCHAR(255) NOT NULL,  
	EVENTIDENTIFIER VARCHAR(255) NOT NULL, 
	-- METADATA BLOB, -> needs to be added afterwards inside the database specific setups
	-- PAYLOAD BLOB NOT NULL,   -> needs to be added afterwards inside the database specific setups
	PAYLOADREVISION VARCHAR(255), 
	PAYLOADTYPE VARCHAR(255) NOT NULL,
	TIMESTAMP VARCHAR(255) NOT NULL,  
	PRIMARY KEY (AGGREGATEIDENTIFIER, SEQUENCENUMBER),
	UNIQUE (EVENTIDENTIFIER)
);
-- The following sequence table will be dropped in schema version v3.0.0.
-- It was generated by JPA back then and hadn't been used since switching to JDBC.
-- It might be relevant for those who want to use AxonFramework with JPA ( + orm.xml here for the customized table name).
CREATE TABLE "axon_on_microprofile_tryout"."eventsourcing_sequence" (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT NUMERIC(38), PRIMARY KEY (SEQ_NAME));

CREATE TABLE "axon_on_microprofile_tryout"."sagaentry" (
	sagaId VARCHAR(255) NOT NULL,
	revision VARCHAR(255),
	sagaType VARCHAR(255),
	-- serializedSaga BLOB, -> needs to be added afterwards inside the database specific setups
	PRIMARY KEY (sagaId)
);
    
CREATE TABLE "axon_on_microprofile_tryout"."associationvalueentry" (
	id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
	associationKey VARCHAR(255),
	associationValue VARCHAR(255),
	sagaId VARCHAR(255),
	sagaType VARCHAR(255),
	PRIMARY KEY (id)
);

CREATE INDEX ASSOCIATIONVALUEENTRY_INDEX_ASSOCIATION ON "axon_on_microprofile_tryout"."associationvalueentry" (sagaType, associationKey, associationValue);
CREATE INDEX ASSOCIATIONVALUEENTRY_INDEX_SAGA ON "axon_on_microprofile_tryout"."associationvalueentry" (sagaId, sagaType);

-- These inserts will be deleted with the drop of the sequence table in schema version v3.0.0.
-- They were generated by JPA back then and hadn't been used since switching to JDBC.
-- It might be relevant for those who want to use AxonFramework with JPA ( + orm.xml here for the customized table name).
INSERT INTO "axon_on_microprofile_tryout"."eventsourcing_sequence"(SEQ_NAME, SEQ_COUNT) values ('ASSOCIATIONVALUEENTRY_ID', 0);
INSERT INTO "axon_on_microprofile_tryout"."eventsourcing_sequence"(SEQ_NAME, SEQ_COUNT) values ('DOMAINEVENTENTRY_GLOBAL_INDEX', 0);