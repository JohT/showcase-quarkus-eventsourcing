name: GraalVM Community Edition native-image-agent

on:
  workflow_call:
    inputs:
      ci-commit-message:
        required: true
        type: string    
      ci-commit-author:
        required: true
        type: string    
      original-event-name:
        required: true
        type: string    
      graalvm-version:
        required: true
        type: string
    secrets:
      git-push-access-token:
        required: true

jobs:
  native-image-agent:
    name: Runs the GraalVM native image agent as last step and commits its results into the repository
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['java11']
    steps:
      - name: Display Inputs
        env:
          INPUTS_JSON: ${{ toJson(inputs) }}
        run: echo "$INPUTS_JSON"
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.git-push-access-token }}
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Setup GraalVM Community Edition
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: ${{ inputs.graalvm-version }}
          java: ${{ matrix.java }}
      - name: Install Native Image Tool for GraalVM
        run: gu install native-image
        
      - name: Run application on GraalVM with activated native-image-agent for trace file generation and execute its integrations tests
        working-directory: showcase-quarkus-eventsourcing
        run: mvn verify --activate-profiles native-image-agent-trace --file pom.xml --batch-mode  && sleep 4
      - name: Generate configuration json files out of the native-image-agent trace output
        working-directory: showcase-quarkus-eventsourcing
        run: $GRAALVM_HOME/bin/native-image-configure generate --trace-input=target/native-image-agent-trace.json --output-dir=target/native-image-agent-trace-configs --caller-filter-file=native-image-caller-filter-rules.json
      
      - name: Get the axon version from the maven pom variable and set the environment variable "axon-version"
        working-directory: showcase-quarkus-eventsourcing
        run: echo "axon-version=$(mvn -q help:evaluate -Dexpression=axon.version -DforceStdout | tr . -)" >> $GITHUB_ENV
      - name: Get the quarkus version from the maven pom variable and set the environment variable "quarkus-version"
        working-directory: showcase-quarkus-eventsourcing
        run: echo "quarkus-version=$(mvn -q help:evaluate -Dexpression=quarkus.platform.version -DforceStdout | tr . -)" >> $GITHUB_ENV
      - name: Get the GraalVM version with "-" instead of "." delimiters
        run: echo "graalvm-version-string=$(echo ${{ inputs.graalvm-version }} | tr .) - >> $GITHUB_ENV
      - name: Assemble the name of the directory for the native image agent output files and set the environment variable "native-image-agent-results-directory"
        run: echo "native-image-agent-results-directory=native-image-agent-results/${{ matrix.java }}-axon-${{ env.axon-version }}-quarkus-${{ env.quarkus-version }}-graalvm-${{ env.graalvm-version-string }}" >> $GITHUB_ENV
      
      - name: Create the native image agent results directory
        working-directory: showcase-quarkus-eventsourcing
        run: mkdir -p ${{ env.native-image-agent-results-directory }}
      - name: Copy the native image agent trace file into the native image agent results directory
        working-directory: showcase-quarkus-eventsourcing
        run: cp target/native-image-agent-trace.json ${{ env.native-image-agent-results-directory }}
      - name: Copy the native image agent configuration files into the native image agent results directory
        working-directory: showcase-quarkus-eventsourcing
        run: cp target/native-image-agent-trace-configs/* ${{ env.native-image-agent-results-directory }}
      
      - name: Archive native image agent results
        uses: actions/upload-artifact@v2
        with:
          name: native-image-agent-results-${{ matrix.java }}
          path: showcase-quarkus-eventsourcing/${{ env.native-image-agent-results-directory }}
          if-no-files-found: error
          retention-days: 5
      
      - name: Commit native image agent results
        working-directory: showcase-quarkus-eventsourcing
        # Don't run again on already pushed continuous integration auto commit. Don't run on pull request events.
        if: inputs.original-event-name != 'pull_request'
        run: |
          git config --global user.name '${{ inputs.ci-commit-author }}'
          git config --global user.email 'joht@users.noreply.github.com'
          git add ${{ env.native-image-agent-results-directory }}
          git commit -m "${{ inputs.ci-commit-message }}"
          git push